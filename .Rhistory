#Generate PLINK map file
map <- select(data,chr, VariantID, VariantName, rs, position)
str(map)
map <- distinct(map) #Remove duplicates
str(map)
print.data.frame(map)
map <- filter(map,!rs=="NULL") #Remove Indels (rs=NULL), genotyping was unreliable.
print.data.frame(map)
snps <- c("rs56243703","rs5744168","rs5744174","rs5744175","rs5744177")
map <- map %>% filter(rs %in% snps)
map <- mutate(map,morgans=0)
map <- rename(map, bp=position)
map <- select(map,chr,rs,morgans,bp)
map <- distinct(map)
print(map)
write.table(map,out1,sep='\t',quote=FALSE,row.names=F,col.names=F)
#Filter, using dplyr package, to include only subjects with:
#Dx = AD or CON, Gend = M or F, ApoE = 22,23,24,33,34,or 44
#Series = JS,SibPair_White,RS,AUT,Indiana,NW, DxAge >= 65, BestCall = 1
#Age (at diagnosis for AD/at entry for CON) of 65 or over
dx <- c("AD","CON")
sex <- c("M","F")
apoe <- c(22,23,24,33,34,44)
series <- c("JS", "RS", "AUT", "Indiana", "SibPair_White", "NW")
data <- filter(data, Dx %in% dx, Gend %in% sex, ApoE %in% apoe, Series %in% series, BestCall == 1)
data <-suppressWarnings(mutate(data,Age=as.numeric(DxAge)))
data <- filter (data, Age >= 65)
x <- data %>% group_by(BestCall,Series,Gend,Dx) %>% summarize(n=n())
print(x)
y <- data %>% group_by(ApoE) %>% summarize(n=n())
print(x)
z <- data %>% select(SubKey,Dx,Gend,DxAge,ApoE,BestCall) %>% arrange(as.numeric(DxAge))
str(z)
z <- distinct(z)
str(z)
head(z)
tail(z)
?mutate()
#load requisite packages
library(data.table)
suppressWarnings(suppressMessages(library(dplyr)))
#To debug, it was convenient to provide the input called by the function here
input="TLR5.csv"
#Read in dataset generated from the Younkin database
data <- read.table(input, sep=',', stringsAsFactors = FALSE, header=T)
str(data)
#Create output files
#To debug, it was convenient to provide the output called by the function here
output <- "TLR5.Ydb"
#Generate names for the PLINK files and the .csv files that will be generated
out1 <- paste(output,sep="",".map")
out2 <- paste(output,sep="",".fam")
out3 <- paste(output,sep="","_cov.txt")
out4 <- paste(output,sep="",".lgen")
out5 <- paste(output,sep="",".plink.csv")
print(out1);print(out2);print(out3);print(out4);print(out5)
#Generate PLINK map file
map <- select(data,chr, VariantID, VariantName, rs, position)
str(map)
map <- distinct(map) #Remove duplicates
str(map)
print.data.frame(map)
map <- filter(map,!rs=="NULL") #Remove Indels (rs=NULL), genotyping was unreliable.
print.data.frame(map)
snps <- c("rs56243703","rs5744168","rs5744174","rs5744175","rs5744177")
map <- map %>% filter(rs %in% snps)
map <- mutate(map,morgans=0)
map <- rename(map, bp=position)
map <- select(map,chr,rs,morgans,bp)
map <- distinct(map)
print(map)
write.table(map,out1,sep='\t',quote=FALSE,row.names=F,col.names=F)
#Filter, using dplyr package, to include only subjects with:
#Dx = AD or CON, Gend = M or F, ApoE = 22,23,24,33,34,or 44
#Series = JS,SibPair_White,RS,AUT,Indiana,NW, DxAge >= 65, BestCall = 1
#Age (at diagnosis for AD/at entry for CON) of 65 or over
dx <- c("AD","CON")
sex <- c("M","F")
apoe <- c(22,23,24,33,34,44)
series <- c("JS", "RS", "AUT", "Indiana", "SibPair_White", "NW")
data <- filter(data, Dx %in% dx, Gend %in% sex, ApoE %in% apoe, Series %in% series, BestCall == 1)
data <-suppressWarnings(mutate(data,Age=as.numeric(DxAge)))
data <- filter (data, Age >= 65)
x <- data %>% group_by(BestCall,Series,Gend,Dx) %>% summarize(n=n())
print(x)
y <- data %>% group_by(ApoE) %>% summarize(n=n())
print(y)
z <- data %>% select(SubKey,Dx,Gend,DxAge,ApoE,BestCall) %>% arrange(as.numeric(DxAge))
str(z)
z <- distinct(z)
str(z)
head(z)
tail(z)
#Create columns for PLINK fam, cov, and lgen files
data <- mutate(data, AFF=99, A1=99, A2=99, APOE4dose=99, APOE2dose=99, SEX=99, JS=0, RS=0, AUT=0, NCRAD=0,NW=0, FID=0, IID=SubKey, PID=0, MID=0)
#Populate variables, making sure to hew to PLINK convention
data[data$Dx == "AD",][, "AFF"] <- 2
data[data$Dx == "CON",][, "AFF"] <- 1
data[data$Call == 11,][, "A1"] <- 1
data[data$Call == 12,][, "A1"] <- 1
data[data$Call == 22,][, "A1"] <- 2
data[data$Call == 11,][, "A2"] <- 1
data[data$Call == 12,][, "A2"] <- 2
data[data$Call == 22,][, "A2"] <- 2
data[data$Gend == "M",][, "SEX"] <- 1
data[data$Gend == "F",][, "SEX"] <- 2
data[data$ApoE == 22,][, "APOE4dose"] <- 0
data[data$ApoE == 23,][, "APOE4dose"] <- 0
data[data$ApoE == 24,][, "APOE4dose"] <- 1
data[data$ApoE == 33,][, "APOE4dose"] <- 0
data[data$ApoE == 34,][, "APOE4dose"] <- 1
data[data$ApoE == 44,][, "APOE4dose"] <- 2
data[data$ApoE == 22,][, "APOE2dose"] <- 2
data[data$ApoE == 23,][, "APOE2dose"] <- 1
data[data$ApoE == 24,][, "APOE2dose"] <- 1
data[data$ApoE == 33,][, "APOE2dose"] <- 0
data[data$ApoE == 34,][, "APOE2dose"] <- 0
data[data$ApoE == 44,][, "APOE2dose"] <- 0
data[data$Series == "JS",][, "JS"] <- 1
data[data$Series == "SibPair_White",][, "JS"] <- 1
data[data$Series == "RS",][, "RS"] <- 1
data[data$Series == "AUT",][, "AUT"] <- 1
data[data$Series == "Indiana",][, "NCRAD"] <- 1
data[data$Series == "NW",][, "NW"] <- 1
#Check coding for PLINK during debugging, using dplyr as exemplified below
print(data %>% group_by(rs,AFF,SEX,APOE4dose, APOE2dose,A1,A2) %>% summarize(n=n()))
print.data.frame(data %>% group_by(rs,A1,A2) %>% summarize(n=n()))
print.data.frame(data %>% group_by(rs,AFF) %>% summarize(n=n()))
print.data.frame(data %>% group_by(rs,SEX) %>% summarize(n=n()))
print.data.frame(data %>% group_by(APOE4dose,APOE2dose) %>% summarize(n=n()))
#Filter, using dplyr package, to include only subjects with:
#Dx = AD or CON, Gend = M or F, ApoE = 22,23,24,33,34,or 44
#Series = JS,SibPair_White,RS,AUT,Indiana,NW, DxAge >= 65, BestCall = 1
#Age (at diagnosis for AD/at entry for CON) of 65 or over
#rs = "rs56243703","rs5744168","rs5744174","rs5744175","rs5744177"
dx <- c("AD","CON")
sex <- c("M","F")
apoe <- c(22,23,24,33,34,44)
series <- c("JS", "RS", "AUT", "Indiana", "SibPair_White", "NW")
data <- filter(data, Dx %in% dx, Gend %in% sex, ApoE %in% apoe, Series %in% series, BestCall == 1, rs %in% snps)
data <-suppressWarnings(mutate(data,Age=as.numeric(DxAge)))
data <- filter (data, Age >= 65)
x <- data %>% group_by(BestCall,Series,Gend,Dx) %>% summarize(n=n())
print(x)
y <- data %>% group_by(ApoE) %>% summarize(n=n())
print(y)
z <- data %>% select(SubKey,Dx,Gend,DxAge,ApoE,BestCall) %>% arrange(as.numeric(DxAge))
str(z)
z <- distinct(z)
str(z)
head(z)
tail(z)
#Create columns for PLINK fam, cov, and lgen files
data <- mutate(data, AFF=99, A1=99, A2=99, APOE4dose=99, APOE2dose=99, SEX=99, JS=0, RS=0, AUT=0, NCRAD=0,NW=0, FID=0, IID=SubKey, PID=0, MID=0)
#Populate variables, making sure to hew to PLINK convention
data[data$Dx == "AD",][, "AFF"] <- 2
data[data$Dx == "CON",][, "AFF"] <- 1
data[data$Call == 11,][, "A1"] <- 1
data[data$Call == 12,][, "A1"] <- 1
data[data$Call == 22,][, "A1"] <- 2
data[data$Call == 11,][, "A2"] <- 1
data[data$Call == 12,][, "A2"] <- 2
data[data$Call == 22,][, "A2"] <- 2
data[data$Gend == "M",][, "SEX"] <- 1
data[data$Gend == "F",][, "SEX"] <- 2
data[data$ApoE == 22,][, "APOE4dose"] <- 0
data[data$ApoE == 23,][, "APOE4dose"] <- 0
data[data$ApoE == 24,][, "APOE4dose"] <- 1
data[data$ApoE == 33,][, "APOE4dose"] <- 0
data[data$ApoE == 34,][, "APOE4dose"] <- 1
data[data$ApoE == 44,][, "APOE4dose"] <- 2
data[data$ApoE == 22,][, "APOE2dose"] <- 2
data[data$ApoE == 23,][, "APOE2dose"] <- 1
data[data$ApoE == 24,][, "APOE2dose"] <- 1
data[data$ApoE == 33,][, "APOE2dose"] <- 0
data[data$ApoE == 34,][, "APOE2dose"] <- 0
data[data$ApoE == 44,][, "APOE2dose"] <- 0
data[data$Series == "JS",][, "JS"] <- 1
data[data$Series == "SibPair_White",][, "JS"] <- 1
data[data$Series == "RS",][, "RS"] <- 1
data[data$Series == "AUT",][, "AUT"] <- 1
data[data$Series == "Indiana",][, "NCRAD"] <- 1
data[data$Series == "NW",][, "NW"] <- 1
#Check coding for PLINK during debugging, using dplyr as exemplified below
print(data %>% group_by(rs,AFF,SEX,APOE4dose, APOE2dose,A1,A2) %>% summarize(n=n()))
print.data.frame(data %>% group_by(rs,A1,A2) %>% summarize(n=n()))
print.data.frame(data %>% group_by(rs,AFF) %>% summarize(n=n()))
print.data.frame(data %>% group_by(rs,SEX) %>% summarize(n=n()))
print.data.frame(data %>% group_by(APOE4dose,APOE2dose) %>% summarize(n=n()))
#print.data.frame(y)
#Create PLINK fam file, commands commented out were useful during debugging
fam <- select(data,FID,IID,PID,MID,SEX,AFF)
fam <- distinct(fam)
#str(fam); head(fam); tail(fam)
write.table(fam,out2,sep='\t',quote=FALSE,row.names=F,col.names=F)
#SORCS2fam=read.table("SORCS2.fam", header = F)
#str(SORCS2fam);head(SORCS2fam);tail(SORCS2fam)
#Create PLINK cov file, commands commented out were useful during debugging
#Not sure why, but errors sometimes occurred in r when using "SORCS2.cov"" as output using write.table
#So I used "SORCS2cov.txt" thereby avoiding this problem
cov <- select(data,FID,IID,JS,RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose)
cov <- distinct(cov)
#str(cov)
write.table(cov,out3,sep='\t',quote=FALSE,row.names=F,col.names=T)
#SORCS2cov=read.table("SORCS2cov.txt", header = T)
#str(SORCS2cov);head(SORCS2cov); tail(SORCS2cov)
#load requisite packages
library(data.table)
suppressWarnings(suppressMessages(library(dplyr)))
#To debug, it was convenient to provide the input called by the function here
input="TLR5.csv"
#Read in dataset generated from the Younkin database
data <- read.table(input, sep=',', stringsAsFactors = FALSE, header=T)
str(data)
#Create output files
#To debug, it was convenient to provide the output called by the function here
output <- "TLR5.Ydb"
#Generate names for the PLINK files and the .csv files that will be generated
out1 <- paste(output,sep="",".map")
out2 <- paste(output,sep="",".fam")
out3 <- paste(output,sep="","_cov.txt")
out4 <- paste(output,sep="",".lgen")
out5 <- paste(output,sep="",".plink.csv")
print(out1);print(out2);print(out3);print(out4);print(out5)
#Generate PLINK map file
map <- select(data,chr, VariantID, VariantName, rs, position)
str(map)
map <- distinct(map) #Remove duplicates
str(map)
print.data.frame(map)
map <- filter(map,!rs=="NULL") #Remove Indels (rs=NULL), genotyping was unreliable.
print.data.frame(map)
snps <- c("rs56243703","rs5744168","rs5744174","rs5744175","rs5744177")
map <- map %>% filter(rs %in% snps)
map <- mutate(map,morgans=0)
map <- rename(map, bp=position)
map <- select(map,chr,rs,morgans,bp)
map <- distinct(map)
print(map)
write.table(map,out1,sep='\t',quote=FALSE,row.names=F,col.names=F)
#Filter, using dplyr package, to include only subjects with:
#Dx = AD or CON, Gend = M or F, ApoE = 22,23,24,33,34,or 44
#Series = JS,SibPair_White,RS,AUT,Indiana,NW, DxAge >= 65, BestCall = 1
#Age (at diagnosis for AD/at entry for CON) of 65 or over
#rs = "rs56243703","rs5744168","rs5744174","rs5744175","rs5744177"
dx <- c("AD","CON")
sex <- c("M","F")
apoe <- c(22,23,24,33,34,44)
series <- c("JS", "RS", "AUT", "Indiana", "SibPair_White", "NW")
data <- filter(data, Dx %in% dx, Gend %in% sex, ApoE %in% apoe, Series %in% series, BestCall == 1, rs %in% snps)
data <-suppressWarnings(mutate(data,Age=as.numeric(DxAge)))
data <- filter (data, Age >= 65)
x <- data %>% group_by(BestCall,Series,Gend,Dx) %>% summarize(n=n())
print(x)
y <- data %>% group_by(ApoE) %>% summarize(n=n())
print(y)
z <- data %>% select(SubKey,Dx,Gend,DxAge,ApoE,BestCall) %>% arrange(as.numeric(DxAge))
str(z)
z <- distinct(z)
str(z)
head(z)
tail(z)
#Create columns for PLINK fam, cov, and lgen files
data <- mutate(data, AFF=99, A1=99, A2=99, APOE4dose=99, APOE2dose=99, SEX=99, JS=0, RS=0, AUT=0, NCRAD=0,NW=0, FID=0, IID=SubKey, PID=0, MID=0)
#Populate variables, making sure to hew to PLINK convention
data[data$Dx == "AD",][, "AFF"] <- 2
data[data$Dx == "CON",][, "AFF"] <- 1
data[data$Call == 11,][, "A1"] <- 1
data[data$Call == 12,][, "A1"] <- 1
data[data$Call == 22,][, "A1"] <- 2
data[data$Call == 11,][, "A2"] <- 1
data[data$Call == 12,][, "A2"] <- 2
data[data$Call == 22,][, "A2"] <- 2
data[data$Gend == "M",][, "SEX"] <- 1
data[data$Gend == "F",][, "SEX"] <- 2
data[data$ApoE == 22,][, "APOE4dose"] <- 0
data[data$ApoE == 23,][, "APOE4dose"] <- 0
data[data$ApoE == 24,][, "APOE4dose"] <- 1
data[data$ApoE == 33,][, "APOE4dose"] <- 0
data[data$ApoE == 34,][, "APOE4dose"] <- 1
data[data$ApoE == 44,][, "APOE4dose"] <- 2
data[data$ApoE == 22,][, "APOE2dose"] <- 2
data[data$ApoE == 23,][, "APOE2dose"] <- 1
data[data$ApoE == 24,][, "APOE2dose"] <- 1
data[data$ApoE == 33,][, "APOE2dose"] <- 0
data[data$ApoE == 34,][, "APOE2dose"] <- 0
data[data$ApoE == 44,][, "APOE2dose"] <- 0
data[data$Series == "JS",][, "JS"] <- 1
data[data$Series == "SibPair_White",][, "JS"] <- 1
data[data$Series == "RS",][, "RS"] <- 1
data[data$Series == "AUT",][, "AUT"] <- 1
data[data$Series == "Indiana",][, "NCRAD"] <- 1
data[data$Series == "NW",][, "NW"] <- 1
#Check coding for PLINK during debugging, using dplyr as exemplified below
print(data %>% group_by(rs,AFF,SEX,APOE4dose, APOE2dose,A1,A2) %>% summarize(n=n()))
print.data.frame(data %>% group_by(rs,A1,A2) %>% summarize(n=n()))
print.data.frame(data %>% group_by(rs,AFF) %>% summarize(n=n()))
print.data.frame(data %>% group_by(rs,SEX) %>% summarize(n=n()))
print.data.frame(data %>% group_by(APOE4dose,APOE2dose) %>% summarize(n=n()))
#print.data.frame(y)
#Create PLINK fam file, commands commented out were useful during debugging
fam <- select(data,FID,IID,PID,MID,SEX,AFF)
fam <- distinct(fam)
#str(fam); head(fam); tail(fam)
write.table(fam,out2,sep='\t',quote=FALSE,row.names=F,col.names=F)
#SORCS2fam=read.table("SORCS2.fam", header = F)
#str(SORCS2fam);head(SORCS2fam);tail(SORCS2fam)
#Create PLINK cov file, commands commented out were useful during debugging
#Not sure why, but errors sometimes occurred in r when using "SORCS2.cov"" as output using write.table
#So I used "SORCS2cov.txt" thereby avoiding this problem
cov <- select(data,FID,IID,JS,RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose)
cov <- distinct(cov)
#str(cov)
write.table(cov,out3,sep='\t',quote=FALSE,row.names=F,col.names=T)
#SORCS2cov=read.table("SORCS2cov.txt", header = T)
#str(SORCS2cov);head(SORCS2cov); tail(SORCS2cov)
#Create PLINK lgen file
lgen <- select(data,FID,IID,rs,A1,A2)
#str(lgen)
write.table(lgen,out4,sep='\t',quote=FALSE,row.names=F,col.names=F)
#SORCS2lgen=read.table("SORCS2.lgen", header = F)
#str(SORCS2lgen)
#Analyse the files in PLINK, format, and print the output. The analysis here is the same as that
#in the script for the adsp2plink function below, where it is better annotated.
assoc <- paste("plink",sep=" ","--lfile", output, "--assoc", "--ci 0.95", "--out", output)
logistic <- paste("plink",sep=" ","--lfile", output, "--logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--mhf 0.005 --out", output)
haplog <- paste("plink",sep=" ","--lfile", output, "--hap-window 4 --hap-logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--mhf 0.005 --out", output)
assocfile <- paste(output,sep="",".assoc")
logisfile <- paste(output,sep="",".assoc.logistic")
haplogfile <- paste(output,sep="",".assoc.hap.logistic")
system(assoc)
system(logistic)
system(haplog)
f1 <- read.table(assocfile, header=T)
#print(f1)
f1 <- f1 %>% select(CHR,SNP,BP,F_A, F_U, OR, P) %>% rename(FREQ_AD=F_A, FREQ_CON=F_U, OR_assoc=OR, P_assoc=P)
print(f1,digits=2,row.names=F)
print("", quote=F)
#head(f1)
f1 <- f1 %>% select(CHR,SNP,BP,FREQ_AD,FREQ_CON)
f2 <- read.table(logisfile, header=T)
#print(f2)
f2 <- f2 %>% filter (TEST=="ADD") %>% select (SNP,NMISS,OR,L95,U95,P) %>% rename(OR_logis=OR, P_logis=P)
#head(f2)
f3<- left_join(f1,f2,by="SNP")
print(f3,digits=2,row.names=F)
print("", quote=F)
write.table(f3,out5,sep=",", quote=FALSE,row.names=F,col.names=T)
#print("PLINK commands:");print(assoc);print(logistic)
f4 <- read.table(haplogfile, header=T)
f4 <- f4 %>% select(-NSNP,-NHAP,-STAT) %>% arrange(desc(HAPLOTYPE))
print(f4,digits=2, row.names=F)
print("", quote=F)
hapomni <- paste("plink",sep=" ","--lfile", output, "--hap-window 4 --hap-logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--mhf 0.005 --hap-omnibus --out", output)
system(hapomni)
f4 <- read.table(haplogfile, header=T)
f4 <- f4 %>% rename(Pomni=P)
print(f4,digits=2, row.names=F)
print("", quote=F)
#load requisite packages
library(data.table)
suppressWarnings(suppressMessages(library(dplyr)))
#To debug, it was convenient to provide the input called by the function here
input="TLR5.csv"
#Read in dataset generated from the Younkin database
data <- read.table(input, sep=',', stringsAsFactors = FALSE, header=T)
str(data)
#Create output files
#To debug, it was convenient to provide the output called by the function here
output <- "TLR5.Ydb"
#Generate names for the PLINK files and the .csv files that will be generated
out1 <- paste(output,sep="",".map")
out2 <- paste(output,sep="",".fam")
out3 <- paste(output,sep="","_cov.txt")
out4 <- paste(output,sep="",".lgen")
out5 <- paste(output,sep="",".plink.csv")
print(out1);print(out2);print(out3);print(out4);print(out5)
#Generate PLINK map file
map <- select(data,chr, VariantID, VariantName, rs, position)
str(map)
map <- distinct(map) #Remove duplicates
str(map)
print.data.frame(map)
map <- filter(map,!rs=="NULL") #Remove Indels (rs=NULL), genotyping was unreliable.
print.data.frame(map)
snps <- c("rs56243703","rs5744168","rs5744174","rs5744175","rs5744177")
map <- map %>% filter(rs %in% snps)
map <- mutate(map,morgans=0)
map <- rename(map, bp=position)
map <- select(map,chr,rs,morgans,bp)
map <- distinct(map)
print(map)
write.table(map,out1,sep='\t',quote=FALSE,row.names=F,col.names=F)
#Filter, using dplyr package, to include only subjects with:
#Dx = AD or CON, Gend = M or F, ApoE = 22,23,24,33,34,or 44
#Series = JS,SibPair_White,RS,AUT,Indiana,NW, DxAge >= 65, BestCall = 1
#Age (at diagnosis for AD/at entry for CON) of 65 or over
#rs = "rs56243703","rs5744168","rs5744174","rs5744175","rs5744177"
dx <- c("AD","CON")
sex <- c("M","F")
apoe <- c(22,23,24,33,34,44)
series <- c("JS", "RS", "AUT", "Indiana", "SibPair_White", "NW")
data <- filter(data, Dx %in% dx, Gend %in% sex, ApoE %in% apoe, Series %in% series, BestCall == 1, rs %in% snps)
data <-suppressWarnings(mutate(data,Age=as.numeric(DxAge)))
data <- filter (data, Age >= 65)
x <- data %>% group_by(BestCall,Series,Gend,Dx) %>% summarize(n=n())
print(x)
y <- data %>% group_by(ApoE) %>% summarize(n=n())
print(y)
z <- data %>% select(SubKey,Dx,Gend,DxAge,ApoE,BestCall) %>% arrange(as.numeric(DxAge))
str(z)
z <- distinct(z)
str(z)
head(z)
tail(z)
#Create columns for PLINK fam, cov, and lgen files
data <- mutate(data, AFF=99, A1=99, A2=99, APOE4dose=99, APOE2dose=99, SEX=99, JS=0, RS=0, AUT=0, NCRAD=0,NW=0, FID=0, IID=SubKey, PID=0, MID=0)
#Populate variables, making sure to hew to PLINK convention
data[data$Dx == "AD",][, "AFF"] <- 2
data[data$Dx == "CON",][, "AFF"] <- 1
data[data$Call == 11,][, "A1"] <- 1
data[data$Call == 12,][, "A1"] <- 1
data[data$Call == 22,][, "A1"] <- 2
data[data$Call == 11,][, "A2"] <- 1
data[data$Call == 12,][, "A2"] <- 2
data[data$Call == 22,][, "A2"] <- 2
data[data$Gend == "M",][, "SEX"] <- 1
data[data$Gend == "F",][, "SEX"] <- 2
data[data$ApoE == 22,][, "APOE4dose"] <- 0
data[data$ApoE == 23,][, "APOE4dose"] <- 0
data[data$ApoE == 24,][, "APOE4dose"] <- 1
data[data$ApoE == 33,][, "APOE4dose"] <- 0
data[data$ApoE == 34,][, "APOE4dose"] <- 1
data[data$ApoE == 44,][, "APOE4dose"] <- 2
data[data$ApoE == 22,][, "APOE2dose"] <- 2
data[data$ApoE == 23,][, "APOE2dose"] <- 1
data[data$ApoE == 24,][, "APOE2dose"] <- 1
data[data$ApoE == 33,][, "APOE2dose"] <- 0
data[data$ApoE == 34,][, "APOE2dose"] <- 0
data[data$ApoE == 44,][, "APOE2dose"] <- 0
data[data$Series == "JS",][, "JS"] <- 1
#data[data$Series == "SibPair_White",][, "JS"] <- 1
data[data$Series == "RS",][, "RS"] <- 1
data[data$Series == "AUT",][, "AUT"] <- 1
#data[data$Series == "Indiana",][, "NCRAD"] <- 1
#data[data$Series == "NW",][, "NW"] <- 1
#Check coding for PLINK during debugging, using dplyr as exemplified below
print(data %>% group_by(rs,AFF,SEX,APOE4dose, APOE2dose,A1,A2) %>% summarize(n=n()))
print.data.frame(data %>% group_by(rs,A1,A2) %>% summarize(n=n()))
print.data.frame(data %>% group_by(rs,AFF) %>% summarize(n=n()))
print.data.frame(data %>% group_by(rs,SEX) %>% summarize(n=n()))
print.data.frame(data %>% group_by(APOE4dose,APOE2dose) %>% summarize(n=n()))
#print.data.frame(y)
#Create PLINK fam file, commands commented out were useful during debugging
fam <- select(data,FID,IID,PID,MID,SEX,AFF)
fam <- distinct(fam)
#str(fam); head(fam); tail(fam)
write.table(fam,out2,sep='\t',quote=FALSE,row.names=F,col.names=F)
#SORCS2fam=read.table("SORCS2.fam", header = F)
#str(SORCS2fam);head(SORCS2fam);tail(SORCS2fam)
#Create PLINK cov file, commands commented out were useful during debugging
#Not sure why, but errors sometimes occurred in r when using "SORCS2.cov"" as output using write.table
#So I used "SORCS2cov.txt" thereby avoiding this problem
cov <- select(data,FID,IID,JS,RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose)
cov <- distinct(cov)
#str(cov)
write.table(cov,out3,sep='\t',quote=FALSE,row.names=F,col.names=T)
#SORCS2cov=read.table("SORCS2cov.txt", header = T)
#str(SORCS2cov);head(SORCS2cov); tail(SORCS2cov)
#Create PLINK lgen file
lgen <- select(data,FID,IID,rs,A1,A2)
#str(lgen)
write.table(lgen,out4,sep='\t',quote=FALSE,row.names=F,col.names=F)
#SORCS2lgen=read.table("SORCS2.lgen", header = F)
#str(SORCS2lgen)
#Analyse the files in PLINK, format, and print the output. The analysis here is the same as that
#in the script for the adsp2plink function below, where it is better annotated.
assoc <- paste("plink",sep=" ","--lfile", output, "--assoc", "--ci 0.95", "--out", output)
logistic <- paste("plink",sep=" ","--lfile", output, "--logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--mhf 0.005 --out", output)
haplog <- paste("plink",sep=" ","--lfile", output, "--hap-window 4 --hap-logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--mhf 0.005 --out", output)
assocfile <- paste(output,sep="",".assoc")
logisfile <- paste(output,sep="",".assoc.logistic")
haplogfile <- paste(output,sep="",".assoc.hap.logistic")
system(assoc)
system(logistic)
system(haplog)
f1 <- read.table(assocfile, header=T)
#print(f1)
f1 <- f1 %>% select(CHR,SNP,BP,F_A, F_U, OR, P) %>% rename(FREQ_AD=F_A, FREQ_CON=F_U, OR_assoc=OR, P_assoc=P)
print(f1,digits=2,row.names=F)
print("", quote=F)
#head(f1)
f1 <- f1 %>% select(CHR,SNP,BP,FREQ_AD,FREQ_CON)
f2 <- read.table(logisfile, header=T)
#print(f2)
f2 <- f2 %>% filter (TEST=="ADD") %>% select (SNP,NMISS,OR,L95,U95,P) %>% rename(OR_logis=OR, P_logis=P)
#head(f2)
f3<- left_join(f1,f2,by="SNP")
print(f3,digits=2,row.names=F)
print("", quote=F)
write.table(f3,out5,sep=",", quote=FALSE,row.names=F,col.names=T)
#print("PLINK commands:");print(assoc);print(logistic)
f4 <- read.table(haplogfile, header=T)
f4 <- f4 %>% select(-NSNP,-NHAP,-STAT) %>% arrange(desc(HAPLOTYPE))
print(f4,digits=2, row.names=F)
print("", quote=F)
hapomni <- paste("plink",sep=" ","--lfile", output, "--hap-window 4 --hap-logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--mhf 0.005 --hap-omnibus --out", output)
system(hapomni)
f4 <- read.table(haplogfile, header=T)
f4 <- f4 %>% rename(Pomni=P)
print(f4,digits=2, row.names=F)
print("", quote=F)
